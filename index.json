[{"content":"Creating a personal blog with technical content is a excellent way to enhance your writting skill, take your notes and share your experience with others on the Internet. Ideally, we should have following goals when creating and mantaining a blog:\nNo/Low-cost - Free or as close to free as posisble. Productive - Easy to write in and maintain. Cloud Native - Utilizes public cloud services for hosting, allowing for infinite scaling. After researching, I found that using Markdown, Hugo and GitHub Pages is indeed a powerful combination for creating and maintaining a cost-effective, productive, and cloud-native blog:\nMarkdown - A markup language that is extremely easy to read, write natively and can be converted into HTML. Hugo - A static site generator written in the Go language that allows for content written in Markdown to be rendered into HTML webpages. GitHub Pages - A GitHub service that hosts web content (such as HTML webpages) stored in a GitHub repository. In this post, I will show how to create your own blog for FREE using above technologies. The blog is built using an Linux operating system host (including Window Subsystem for Linux - WSL as in my case).\nHere\u0026rsquo;s an outline of the steps you can follow to create your own blog using these technologies:\n1. Set up GitHub Account If you don\u0026rsquo;t have one already, creating a GitHub account. GitHub Pages allows you to host your blog for free using a GitHub repository.\n2. Install Hugo Before starting, make sure git is install in your local machine.\nsudo apt install git Open a terminal and configure Git with your name and email address.\ngit config --global user.name \u0026#34;Your Name\u0026#34; git config --global user.email \u0026#34;your.email@example.com\u0026#34; To verify that Git has been installed successfully, you can check the version using git --version. This command will display the installed version of Git.\nNow, install Hugo on your Linux operating system host. For Ubuntu user, you can follow this commands.\nsudo apt install hugo For verification, run this command:\nhugo version The Hugo version should be shown if the installation is successfull.\n3. Create a new Hugo site Use hugo new site command to create a new Hugo site:\nhugo new site \u0026lt;USERNAME\u0026gt;-hugo -f yml This will set up the basic directory structure and configuration file (*.yml format) for your blog. This site will be associated with a GitHub repository where you can store the source code of your blog.\nWhat is `\u0026lt;USENAME\u0026gt;`\nFor convenient management and organization, you should name the your site as above format with \u0026lt;USERNAME\u0026gt; as the your GitHub\u0026rsquo;s username, i.e., visionbike-hugo. It\u0026rsquo;s a helpful tip for keeping track of your projects and ensuring clarity when managing multiple repositories.\nInitialize git in the local site for further use.\ncd \u0026lt;USERNAME\u0026gt;-hugo git init After creating the Hugo site, it\u0026rsquo;s important to associate it with a GitHub repository. You need to create a new repository on GitHub for your blog\u0026rsquo;s source code.\nCreating Github Repository Without README\nBy creating a repository without a README file, you can avoid accidental history conflicts when pushing your local project to a fresh repository. You can always add a README file later if needed.\nNow, link the local site to the GitHub repository by using remote command:\ngit remote add origin https://github.com/\u0026lt;USERNAME\u0026gt;/\u0026lt;USERNAME\u0026gt;.github.io.git git banrch -M master Replace \u0026lt;USERNAME\u0026gt; with your GitHub\u0026rsquo;s username.\nBy completing these steps, you have linked your local Hugo site to the GitHub repository. Now you can continue working on your site locally, commit your changes, and push them to the remote repository when ready.\n4. Install Hugo Theme nstalling a Hugo theme is a fantastic way to personalize your blog and enhance its visual appeal. You can access free Hugo themes via this website.\nFor my blog, I select the PaperModX theme because of its style and awesome features. To use the theme, I will add its source code by git submodule command.\ngit submodule add --depth 1 https://github.com/reorx/hugo-PaperModX themes/PaperModX This command adds the PaperModX theme repository as a submodule in the themes/PaperModX directory of your Hugo site.\nUpdating submodules\nIf you have already added the submodule before, you can run the following command to reclone it.\ngit submodule update --init --recursive For updating the theme, run this command.\ngit submodule update --remote --merge 5. Modify Hugo Configuration Once you have added the theme, you can configure it in your Hugo site\u0026rsquo;s configuration file (config.toml or config.yml). Refer to the theme\u0026rsquo;s documentation for specific instructions on customization and configuration options. You will most likely want to modify the following fields:\nbaseURL: This should be set to the URL GitHub Pages will use to host your blog, which will depend on the name of the GitHub repository you created. If the GitHub repository is named \u0026lt;USERNAME\u0026gt;.github.io, then the value of baseURL will be https://\u0026lt;USERNAME\u0026gt;.github.io/. If the GitHub repository has any other name, then the value of baseURL will be https://\u0026lt;USERNAME\u0026gt;.github.io/\u0026lt;REPOSITORY_NAME\u0026gt;/.\nFor example, my GitHub username is visionbike. If the GitHub repository is named visionbike.github.io, then the value of baseURL will be https://visionbike.github.io/. For example, my GitHub username is visionbike. If the GitHub repository is named visionbike-hugo, then the value of baseURL will be https://visionbike.github.io/visionbike-hugo/. title: This will be the title of your blog site as it appears at the top of a visitorâ€™s web browser when your site is open. It will also appear underneath your avatar, if one is present.\ntheme: The name of the theme Hugo should use to render your site. In my example, this will be set to PaperModX, since that is the name of the theme I am using.\nExample contents of a valid config.yml file can be found below.\nconfig.yml # base URL baseURL: \u0026#34;http://visionbike.github.io/\u0026#34; # site title title: \u0026#34;Visionbike - Personal Blog of CV | DSP | ML notes\u0026#34; # paginate paginate: 5 # theme config theme: \u0026#34;PaperModX\u0026#34; themesdir: \u0026#34;themes\u0026#34; # global config enableInlineShortcodes: true enableRobotsTXT: true buildDrafts: false buildFuture: false buildExpired: false enableEmoji: true # css minify for speeding up site minify: disableXML: true minifyOutput: true # site param config params: # environment env: \u0026#34;production\u0026#34; description: \u0026#34;Visionbike - Personal Blog of CV | DSP | ML notes\u0026#34; # color scheme: auto, dark, light defaultTheme: \u0026#34;dark\u0026#34; disableThemeToggle: true # header logo logo: text: \u0026#34;Visionbike\u0026#34; icon: \u0026#34;images/apple-touch-icon.png\u0026#34; iconHeight: 35 iconWidth: 35 # profile-mode profileMode: enabled: true title: \u0026#34;Phuc Thanh-Thien Nguyen\u0026#34; subtitle: \u0026#34;AI Researcher - Personal Blog of CV | DSP | ML notes\u0026#34; imageUrl: \u0026#34;images/avatar-3d.png\u0026#34; imageTitle: \u0026#34;avatar-3d\u0026#34; imageWidth: 180 imageHeight: 180 buttons: - name: Archives url: /archives/ - name: Tags url: /tags/ # home-info-mode homeInfoParams: title: \u0026#34;Phuc Thanh-Thien Nguyen\u0026#34; content: \u0026#34;AI Researcher - Personal Blog of CV | DSP | ML notes\u0026#34; # home social icons socialIcons: - name: github url: \u0026#34;https://github.com/visionbike/\u0026#34; - name: linkedIn url: \u0026#34;https://linkedin.com/in/nttphuc/\u0026#34; # post config author: \u0026#34;Visionbike\u0026#34; showCodeCopyButtons: true displayFullLangName: true showReadingTime: true showWordCount: true showPostNavLinks: true showBreadCrumbs: true enableImageZoom: true # assets images assets: # disableFingerprinting: true favicon: \u0026#34;images/favicon.ico\u0026#34; favicon16x16: \u0026#34;images/favicon-16x16.png\u0026#34; favicon32x32: \u0026#34;images/favicon-32x32.png\u0026#34; appleTouchIcon: \u0026#34;images/apple-touch-icon.png\u0026#34; safarPinnedTab: \u0026#34;images/safari-pinned-tab.svg\u0026#34; # search page fuseOpts: isCaseSensitive: false shouldSort: true location: 0 distance: 1000 threshold: 0.4 minMatchCharLength: 0 keys: [\u0026#34;title\u0026#34;, \u0026#34;permalink\u0026#34;, \u0026#34;summary\u0026#34;, \u0026#34;content\u0026#34;] # laguage config languages: en: weight: 1 # language code languageCode: \u0026#34;en\u0026#34; # determines default content language: \u0026#34;en\u0026#34;, \u0026#34;zh-cn\u0026#34;, \u0026#34;fr\u0026#34;, \u0026#34;vi\u0026#34;, ... defaultContentLanguage: \u0026#34;en\u0026#34; # menu language menu: main: - name: \u0026#34;Posts\u0026#34; weight: 1 url: \u0026#34;/posts/\u0026#34; - name: \u0026#34;Tags\u0026#34; url: \u0026#34;/tags/\u0026#34; weight: 3 - name: \u0026#34;Archive\u0026#34; url: \u0026#34;/archives/\u0026#34; weight: 4 - name: \u0026#34;Publish\u0026#34; url: \u0026#34;/publish/\u0026#34; weight: 5 - name: \u0026#34;About\u0026#34; weight: 10 url: \u0026#34;/about/\u0026#34; - name: \u0026#34;Search\u0026#34; weight: 100 url: \u0026#34;/search/\u0026#34; # for search page outputs: home: - HTML - RSS - JSON # syntax highlight pygmentsUseClasses: true pygmentsCodeFences: true markup: goldmark: renderer: unsafe: true highlight: style: doom-one2 lineNos: false codeFences: true noClasses: false After modifying your config.yml file accordingly, use git to commit and push the changes from your local repository to GitHub.\ngit add config.yml git commit -m \u0026#34;modify configuration file\u0026#34; git push -u origin master 6. Create New Hugo Post That\u0026rsquo;s a great step to create your first blog post using Hugo! To create your first post with the hugo new command, execute the following command in the terminal.\nhugo new posts/first-post/index.md This command will create a new folder named first-post with new Markdown file index.md inside the content/posts directory. Creating a new directory for each single post helps you manage your resource better when images, media sources can be store directly in this directory. The Markdown file will contain the template for your first blog post and you can start writing your content using Markdown syntax.\nThe contents of the first-post.md file will look something like this.\nfirst-post.md\n--- title: \u0026#34;First Post\u0026#34; date: 2023-07-04T01:53:57+08:00 draft: true --- To create your first blog post using Hugo, you need to add content to the Markdown file and update the metadata header. In the metadata header, you will find information such as the post\u0026rsquo;s title (title), publishing date (date), and draft status (draft). Change the value of the draft field from true to false to indicate that the post is ready to be published on your blog site. Your can also add other features supported by the installed theme for your post, i.e., comments, share buttons, navigation, etc.\nNext, add your desired content to the body of the post. In this case, you can include the line \u0026ldquo;This is my first post! Hello world!\u0026rdquo; at the bottom of the file. Feel free to customize the content to reflect your own thoughts and ideas in Markdown syntax.\nAfter modifying your first blog post, you can use git to commit and push the changes from your local repository to GitHub.\ngit add content/posts/first-post.md git commit -m \u0026#34;add the first post\u0026#34; git push -u origin master first-post.md\n--- title: \u0026#34;First Post\u0026#34; date: 2023-07-04T01:53:57+08:00 draft: true --- 7. Test Hugo Configuration Before hosting your blog to GitHub pages, letâ€™s ensure Hugo can parse the configuration file and build our new blog post successfully.\nIn your local machine, you can run hugo server command to serve your site locally.\nhugo server --disableFastRender It will watch for any changes in your files and automatically rebuild your site whenever there are updates. Hugo will provide a local development server address, usually http://localhost:1313, where you can access your site.\nTo parse the configuration and build your site, you can simply run hugo command. If Hugo encounters any errors, they will be reported here. If the site is successfully built, then you will see output similar to the following.\nStart building sites â€¦ hugo v0.92.2+extended linux/amd64 BuildDate=2023-01-31T11:11:57Z VendorInfo=ubuntu:0.92.2-1ubuntu0.1 | EN -------------------+----- Pages | 13 Paginator pages | 0 Non-page files | 0 Static files | 18 Processed images | 0 Aliases | 0 Sitemaps | 1 Cleaned | 0 Total in 38 ms 8. Set Up GitHub Actions Workflow Lastly, we need to set up a GitHub Actions workflow for automatically building and deploying your blog to GitHub Pages. This workflow is defined by a YAML file in the .github/workflows directory structure at the root of the project. First, letâ€™s create this directory.\nmkdir -p .github/workflows This command creates the .github/workflows directory if it doesn\u0026rsquo;t already exist. The -p option ensures that the parent directories are created if needed.\nThen, we will create a new file within the .github/workflows directory named deploy_gh_pages.yaml with the following contents.\ndeploy_gh_pages.yaml\n--- --- name: Deploy Hugo site via GitHub Pages on: push: branches: - master # Set a branch to deploy pull_request: jobs: deploy: runs-on: ubuntu-22.04 permissions: contents: write concurrency: group: ${{ github.workflow }}-${{ github.ref }} steps: - uses: actions/checkout@v3 with: submodules: true # Fetch Hugo themes (true OR recursive) fetch-depth: 0 # Fetch all history for .GitInfo and .Lastmod - name: Setup Hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: \u0026#34;latest\u0026#34; extended: true - name: Build run: hugo --minify - name: Deploy uses: peaceiris/actions-gh-pages@v3 # If you\u0026#39;re changing the branch from main, # also change the `master` in `refs/heads/master` # below accordingly. if: github.ref == \u0026#39;refs/heads/master\u0026#39; with: github_token: ${{ secrets.GITHUB_TOKEN }} publish_dir: ./public The YAML file defines the GitHub Actions workflow. It sets up the deployment process using Hugo and GitHub Pages. The workflow is triggered on a push to the master branch, and it uses the specified actions to build and deploy your blog.\nYou can see more in this.\nAfter creating this file, use git to commit and push the changes from your local repository to GitHub.\ngit add .github/workflows/deploy_gh_pages.yaml git commit -m \u0026#34;Add GitHub Actions workflow\u0026#34; git push -u origin master 9. Configure GitHub Pages We need to set up the GitHub Pages component of our blog. This will allow GitHub to automatically build and serve our website whenever changes are made to the underlying repository.\nFirst, create new branch named \u0026ldquo;gh-page\u0026rdquo;. This branch will be used by GitHub Pages to build and serve your website. You can create the branch using the branch creation feature in your GitHub repository.\nThen, go to the \u0026ldquo;Settings\u0026rdquo; tab near the top of your repository.\nIn the left hand pane, locate and click on the \u0026ldquo;Pages\u0026rdquo; category.\nBy default, GitHub Pages will be disabled for your repository. To enable it, we need to select a branch for GitHub Pages to build and serve our website from. Under the \u0026ldquo;Source\u0026rdquo; section in the middle pane, you will see a dropdown menu labeled \u0026ldquo;None\u0026rdquo;. Click on the dropdown menu and select the \u0026ldquo;gh-pages\u0026rdquo; branch. This tells GitHub Pages to build and serve your website from the \u0026ldquo;gh-pages\u0026rdquo; branch.\nAfter selecting the deployment branch, you will see a notification indicating where your site will be published. It will provide you with a URL where your website can be accessed.\nWait for a few minutes to allow GitHub Pages to build and deploy your website. After the deployment is complete, you can click on the URL provided in the notification to view your website. It may take some time for the changes to propagate and for your website to become accessible.\nConclusion Congratulations on setting up your blog using Hugo, Markdown, and GitHub Pages! This free and accessible solution enables you to create and share your technical knowledge with a wide audience. Happy blogging!\nReference https://chrisjhart.com/Creating-A-Simple-Free-Blog-Hugo/.\nhttps://github.com/reorx/hugo-PaperModX.\nhttps://gohugo.io/\nhttps://github.com/olOwOlo/hugo-theme-even/\n","permalink":"http://visionbike.github.io/posts/create-personal-blog-with-hugo-and-gh-pages/","summary":"Creating a personal blog with technical content is a excellent way to enhance your writting skill, take your notes and share your experience with others on the Internet. Ideally, we should have following goals when creating and mantaining a blog:\nNo/Low-cost - Free or as close to free as posisble. Productive - Easy to write in and maintain. Cloud Native - Utilizes public cloud services for hosting, allowing for infinite scaling.","title":"Create Personal Blog With Hugo and GitHub Pages"},{"content":"\nI am Phuc Thanh-Thien Nguyen, current working as Ph.D Candidate at Autonomous and Soft Robotics (ASR) Laboratory, National Taiwan University, Taiwan. I focus on computer vision, digital signal processing, machine learning and deep learning in various applications.\nWelcome to my blog! In this blog, I will post small yet interesting notes of knowledge as well as state-of-the-art AI innovation, that I have found during my work as a researcher.\nI have done research on convolutional neural networks for computer-aided diagnosis and biosignal processing for various applications. In my current work, I am applying machine learning (supervised \u0026amp; unsupervised) and statistics to business problems. My go-to programming language is Python with the common data science and machine learning stack.\nCheck out my CV and connect with me on Linkedinâ€‹ if you want to get in touch.\nDisclaimer While I make every effort to ensure the information on this website is accurate and correct, I make no representations about the suitability of this content for any purposes.\nAbout Me! 1. Experience Research Assistant Applied Computing and Multimedia Lab, National Yang-Ming Chiao-Tung University, Taiwan, Sept 2020 - Jan 2021\nResearch suppervised and unsuppervised-based approaches for digital image enhancement. Software Engineer Lac Viet Computing Corporation, Vietnam, Sept 2017 - Aug 2018\nDevelop deep learning core of Question Answering System that using Restful API, and noSQL database (MongoDB) for Vietnamese Law.\nDevelop a prototype version for a facial recognition-based timekeeping service.\n2. Education Background National Taiwan University of Science and Technology Ph.D. Candidate, Electrical Engineering, 2021 - now\nStudy vision-based road anomaly detection, sEMG signal processing, and sEMG-based hand gesture recognition. National Taiwan University of Science and Technology M.Sc., Computer Science and Information Engineering, 2018 - 2020\nGPA: 4.11 / 4.3 Thesis: A Study on Optimal Chroma Subsampling and Upsampling Combination Methods for JPEG Image Reconstrsuction. Study small object detection and distance estimation for the ADAS system, chroma subsampling and upsampling in JPEG compression. VNU-HCM University of Science B.Sc., Computer Science, 2013 - 2017\nGPA: 3.36 / 4.0 Thesis: Spatial-Temporal Shape and Motion Feature for Dynamic Hand Gesture Recognition in Depth Video. ","permalink":"http://visionbike.github.io/about/","summary":"I am Phuc Thanh-Thien Nguyen, current working as Ph.D Candidate at Autonomous and Soft Robotics (ASR) Laboratory, National Taiwan University, Taiwan. I focus on computer vision, digital signal processing, machine learning and deep learning in various applications.\nWelcome to my blog! In this blog, I will post small yet interesting notes of knowledge as well as state-of-the-art AI innovation, that I have found during my work as a researcher.","title":"About"},{"content":"C.-H. Kuo, P. T.-T. Nguyen, and S.-L. Wu. Teaching Artificial Intelligence in Mechanical Engineering to Cultivate Cyber-physical System Talents. In Proceedings of the 2023 Conference on Innovation and Technology in Computer Science Education V. 2 (ITiCSE 2023). https://doi.org/10.1145/3587103.3594193\nI.W.D. Pranata, P.T.-T. Nguyen, K.-H. Su, Y.-C.Kuo, C.-H Kuo. Knee Angle Generation with Walking Speed Adaptation Ability for a Powered Transfemoral Prosthetic Leg Prototype. Inventions 2023, 8, 67. https://doi.org/10.3390/inventions8030067\nM.-H. Hsu; P.T.-T. Nguyen; D.-D. Nguyen; C.-H. Kuo. Image Servo Tracking of a Flexible Manipulator Prototype with Connected Continuum Kinematic Modules. Actuators 2022, 11, 360. DOI: https://doi.org/10.3390/act11120360\nT.-K. Nguyen, P.T.-T. Nguyen, D.-D.Nguyen, C.-H. Kuo. Effective Free-Driving Region Detection for Mobile Robots by Uncertainty Estimation Using RGB-D Data. Sensors 2022, 22, 4751. DOI: https://doi.org/10.3390/s22134751\nP.T.-T. Nguyen, S.-W. Yan, J.-F. Liao, C.-H. Kuo. Autonomous Mobile Robot Navigation in Sparse LiDAR Feature Environments. Appl. Sci. 2021, 11, 5963. DOI: https://doi.org/10.3390/app11135963\nA.-T. Nguyen, S.-H. Lu, P.T.-T. Nguyen. Validating and Forecasting Carbon Emissions in the Framework of the Environmental Kuznets Curve: The Case of Vietnam. Energies 2021, 14, 3144. DOI: https://doi.org/10.3390/en14113144\nVo Hoai Viet, Nguyen Thanh Thien Phuc, Pham Minh Hoang, Liu Kim Nghia, \u0026quot; Spatial-Temporal Shape and Motion Features for Dynamic Hand Gesture Recognition in Depth Video\u0026quot;, International Journal of Image, Graphics and Signal Processing(IJIGSP), Vol.10, No.9, pp. 17-26, 2018. DOI: http://doi.org/10.5815/ijigsp.2018.09.03\n","permalink":"http://visionbike.github.io/publish/","summary":"C.-H. Kuo, P. T.-T. Nguyen, and S.-L. Wu. Teaching Artificial Intelligence in Mechanical Engineering to Cultivate Cyber-physical System Talents. In Proceedings of the 2023 Conference on Innovation and Technology in Computer Science Education V. 2 (ITiCSE 2023). https://doi.org/10.1145/3587103.3594193\nI.W.D. Pranata, P.T.-T. Nguyen, K.-H. Su, Y.-C.Kuo, C.-H Kuo. Knee Angle Generation with Walking Speed Adaptation Ability for a Powered Transfemoral Prosthetic Leg Prototype. Inventions 2023, 8, 67. https://doi.org/10.3390/inventions8030067\nM.-H. Hsu; P.T.-T. Nguyen; D.","title":"Publish"}]